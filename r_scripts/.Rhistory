# importing the file that contains the data into variable bugfix_distribution
bugfix_distribution <- read.csv("~/git/chromium_explorer/bugfix_distribution.csv", header=TRUE)
for(i in 1:41) {
variable_name <- paste("r", i,  sep = "")
pdf(paste(variable_name, "pdf", sep = "."))
barplot(assign(variable_name, as.matrix(bugfix_distribution[i,3:41]/bugfix_distribution[i,2])))
dev.off()
};
View(`r10`)
View(`r10`)
View(`r13`)
View(`r14`)
for(i in 1:41) {
variable_name <- paste("r", i,  sep = "")
pdf(paste(variable_name, "pdf", sep = "."))
barplot(assign(variable_name, as.matrix(bugfix_distribution[i,3:41]/bugfix_distribution[i,2])))
dev.off()
};
for (i in 1:40) {
past_fixed_temp <- 0L
reported_name <- paste("r", i, "_reported",  sep = "")
fixed_name <- paste("r", i, "_fixed",  sep = "")
remaining_name <- paste("r", i, "_remaining",  sep = "")
if(i != 1) {
for (j in i:1) {
past_fixed_temp <-  past_fixed_temp + bugfix_distribution[j,2+i]
}
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name,  past_fixed_temp )
assign(remaining_name, get(reported_name) - get(fixed_name) + get(paste("r", i -1, "_remaining",  sep = "")))
print(paste(i, get(remaining_name), sep = " : " ))
}
else {
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name, bugfix_distribution[i,2+i] + past_fixed_temp)
assign(remaining_name, get(reported_name) - get(fixed_name) )
print(paste(i, get(remaining_name), sep = " : " ))
}
}
# importing the file that contains the data into variable bugfix_distribution
bugfix_distribution <- read.csv("~/git/chromium_explorer/bugfix_distribution.csv", header=TRUE)
;
for (i in 1:40) {
past_fixed_temp <- 0L
reported_name <- paste("r", i, "_reported",  sep = "")
fixed_name <- paste("r", i, "_fixed",  sep = "")
remaining_name <- paste("r", i, "_remaining",  sep = "")
if(i != 1) {
for (j in i:1) {
past_fixed_temp <-  past_fixed_temp + bugfix_distribution[j,2+i]
}
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name,  past_fixed_temp )
assign(remaining_name, get(reported_name) - get(fixed_name) + get(paste("r", i -1, "_remaining",  sep = "")))
print(paste(i, get(remaining_name), sep = " : " ))
}
else {
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name, bugfix_distribution[i,2+i] + past_fixed_temp)
assign(remaining_name, get(reported_name) - get(fixed_name) )
print(paste(i, get(remaining_name), sep = " : " ))
}
# Define the cars vector with 5 values
all_remaining_bugs <- append(all_remaining_bugs, get(remaining_name))
};
for (i in 1:40) {
past_fixed_temp <- 0L
reported_name <- paste("r", i, "_reported",  sep = "")
fixed_name <- paste("r", i, "_fixed",  sep = "")
remaining_name <- paste("r", i, "_remaining",  sep = "")
if(i != 1) {
for (j in i:1) {
past_fixed_temp <-  past_fixed_temp + bugfix_distribution[j,2+i]
}
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name,  past_fixed_temp )
assign(remaining_name, get(reported_name) - get(fixed_name) + get(paste("r", i -1, "_remaining",  sep = "")))
print(paste(i, get(remaining_name), sep = " : " ))
}
else {
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name, bugfix_distribution[i,2+i] + past_fixed_temp)
assign(remaining_name, get(reported_name) - get(fixed_name) )
print(paste(i, get(remaining_name), sep = " : " ))
}
# Define the cars vector with 5 values
all_remaining_bugs <- c()
all_remaining_bugs <- append(all_remaining_bugs, get(remaining_name))
}
for (i in 1:40) {
past_fixed_temp <- 0L
reported_name <- paste("r", i, "_reported",  sep = "")
fixed_name <- paste("r", i, "_fixed",  sep = "")
remaining_name <- paste("r", i, "_remaining",  sep = "")
if(i != 1) {
for (j in i:1) {
past_fixed_temp <-  past_fixed_temp + bugfix_distribution[j,2+i]
}
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name,  past_fixed_temp )
assign(remaining_name, get(reported_name) - get(fixed_name) + get(paste("r", i -1, "_remaining",  sep = "")))
print(paste(i, get(remaining_name), sep = " : " ))
}
else {
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name, bugfix_distribution[i,2+i] + past_fixed_temp)
assign(remaining_name, get(reported_name) - get(fixed_name) )
print(paste(i, get(remaining_name), sep = " : " ))
}
# Define the cars vector with 5 values
all_remaining_bugs <- c()
all_remaining_bugs <- append(all_remaining_bugs, get(remaining_name))
};
# Graph cars using blue points overlayed by a line
plot(all_remaining_bugs, type="o", col="blue")
# declare a empty vector to store all the remaining bugs in the system and plo later
all_remaining_bugs <- c()
#total number of open bugs in the system script
for (i in 1:40) {
past_fixed_temp <- 0L
# declare the variable names to be assigned in a dynamic way in the loop
reported_name <- paste("r", i, "_reported",  sep = "")
fixed_name <- paste("r", i, "_fixed",  sep = "")
remaining_name <- paste("r", i, "_remaining",  sep = "")
if(i != 1) {
for (j in i:1) {
past_fixed_temp <-  past_fixed_temp + bugfix_distribution[j,2+i]
}
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name,  past_fixed_temp )
assign(remaining_name, get(reported_name) - get(fixed_name) + get(paste("r", i -1, "_remaining",  sep = "")))
print(paste(i, get(remaining_name), sep = " : " ))
}
else {
assign(reported_name, bugfix_distribution[i,2])
assign(fixed_name, bugfix_distribution[i,2+i] + past_fixed_temp)
assign(remaining_name, get(reported_name) - get(fixed_name) )
print(paste(i, get(remaining_name), sep = " : " ))
}
all_remaining_bugs <- append(all_remaining_bugs, get(remaining_name))
}
# Graph of the remainder of bugs in the system.
plot(all_remaining_bugs, type="o", col="blue")
